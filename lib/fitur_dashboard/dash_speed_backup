// import 'package:flutter/material.dart';
// import 'package:geolocator/geolocator.dart';
// import 'package:path_provider/path_provider.dart';
// import 'package:path/path.dart';
// import 'dart:io';
// import 'dart:async';
//
// class SpeedDisplay extends StatefulWidget {
//   @override
//   _SpeedDisplayState createState() => _SpeedDisplayState();
// }
//
// class _SpeedDisplayState extends State<SpeedDisplay> {
//   double _currentSpeed = 0.0;
//   double? _velocity;
//   double? _highestVelocity;
//   StreamController<double> _velocityUpdatedStreamController =
//   StreamController<double>();
//   bool _shouldRecordLocation = false;
//   String _filePath = "";
//
//   StreamSubscription<Position>? _positionStreamSubscription;
//   GeolocatorPlatform locator = GeolocatorPlatform.instance;
//
//   @override
//   void initState() {
//     super.initState();
//     _startLocationStream();
//     _startStatusCheck();
//   }
//
//   Future<String> _getStatusFilePath() async {
//     final Directory? directory = await getExternalStorageDirectory();
//     final String folderPath = join(directory!.path, 'Alat CO-SENSE');
//     return join(folderPath, 'status.txt');
//   }
//
//   Future<void> _startStatusCheck() async {
//     while (true) {
//       try {
//         final statusFilePath = await _getStatusFilePath();
//         final File statusFile = File(statusFilePath);
//
//         if (await statusFile.exists()) {
//           final status = await statusFile.readAsString();
//
//           if (status == '1') {
//             if (!_shouldRecordLocation) {
//               _shouldRecordLocation = true;
//               _startLocationStream();
//               _filePath = await _getSpeedFilePath();
//             }
//           } else {
//             if (_shouldRecordLocation) {
//               _shouldRecordLocation = false;
//               _positionStreamSubscription?.cancel();
//             }
//           }
//         }
//       } catch (e) {
//         print("Error reading status file: $e");
//       }
//
//       await Future.delayed(Duration(seconds: 3));
//     }
//   }
//
//   Future<String> _getSpeedFilePath() async {
//     final Directory? directory = await getExternalStorageDirectory();
//     final String folderPath = join(directory!.path, 'Alat CO-SENSE');
//     return join(folderPath, 'speed_data.csv');
//   }
//
//   void _startLocationStream() {
//     _positionStreamSubscription = locator.getPositionStream(
//       locationSettings: const LocationSettings(
//         accuracy: LocationAccuracy.bestForNavigation,
//       ),
//     ).listen((Position position) {
//       if (_shouldRecordLocation) {
//         _onAccelerate(position.speed);
//         _saveSpeedToFile(_currentSpeed.toStringAsFixed(2));
//       }
//     });
//   }
//
//   void _onAccelerate(double speed) {
//     locator.getCurrentPosition().then(
//           (Position updatedPosition) {
//         _velocity = (speed + updatedPosition.speed) / 2;
//         if (_highestVelocity == null || _velocity! > _highestVelocity!) {
//           _highestVelocity = _velocity;
//         }
//         _velocityUpdatedStreamController.add(_velocity!);
//         setState(() {
//           _currentSpeed = _velocity! * 3.6;
//         });
//
//         // Jika kecepatan di atas 1 km/jam, ubah nilai pada file status.txt menjadi 1
//         if (_currentSpeed > 5) {
//           _updateStatusFile('1');
//         } else {
//           _updateStatusFile('0');
//         }
//       },
//     );
//   }
//
//   Future<void> _saveSpeedToFile(String speedData) async {
//     final File file = File(_filePath);
//
//     // Check if the file does not have a header, add CSV header
//     if (!await file.exists()) {
//       await file.writeAsString('Timestamp,Speed (km/h)\n', mode: FileMode.append);
//     }
//
//     final String timestamp = DateTime.now().toLocal().toString().substring(0, 19);
//     final String csvData = '$timestamp,$speedData';
//
//     await file.writeAsString('$csvData\n', mode: FileMode.append);
//   }
//
//   Future<void> _updateStatusFile(String status) async {
//     final statusFilePath = await _getStatusFilePath();
//     final File statusFile = File(statusFilePath);
//
//     try {
//       await statusFile.writeAsString(status);
//     } catch (e) {
//       print("Error updating status file: $e");
//     }
//   }
//
//   @override
//   void dispose() {
//     _velocityUpdatedStreamController.close();
//     _positionStreamSubscription?.cancel();
//     super.dispose();
//   }
//
//   @override
//   Widget build(BuildContext context) {
//     return Center(
//       child: Column(
//         mainAxisAlignment: MainAxisAlignment.center,
//         children: <Widget>[
//           Text(
//             'Current Speed: ${_currentSpeed.toStringAsFixed(2)} km/h',
//             style: TextStyle(
//               fontSize: 16,
//               color: Colors.orange,
//             ),
//           ),
//         ],
//       ),
//     );
//   }
// }

